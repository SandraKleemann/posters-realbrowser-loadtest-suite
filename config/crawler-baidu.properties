## The crawler's reported user name. Might be important to parse robots.txt correctly.
## If property is not set, the default value is 'XLT-Bot'
TCrawlerBaidu.crawler.user.name = Baiduspider

## The following properties define where the crawler starts. That might be the globally configured start page (homepage),
## an already known (crawled) page, or a page listed in the sitemap.
## All possibilities can be weighted. The weight defines how likely the crawler starts with this option. If no option
## is set at all, the global start URL is taken as start page. Values 'HOMEPAGE', 'KNOWN_PAGE', and 'SITEMAP' are supported only.
## All other values will be ignored and 'HOMEPAGE' used instead.
#TCrawlerBaidu.crawler.startAt.1 = HOMEPAGE
#TCrawlerBaidu.crawler.startAt.1.weight = 20
#
#TCrawlerBaidu.crawler.startAt.2 = KNOWN_PAGE
#TCrawlerBaidu.crawler.startAt.2.weight = 70
#
#TCrawlerBaidu.crawler.startAt.3 = SITEMAP
#TCrawlerBaidu.crawler.startAt.3.weight = 10

## The crawler will follow the rules of robots.txt, meta tags, and tagged links
## by default, which is also the behavior in case the property is not set at all.
## This behavior can be switched off if desired.
TCrawlerBaidu.crawler.rule.robots = true
TCrawlerBaidu.crawler.rule.meta = false
TCrawlerBaidu.crawler.rule.linkrel = false

## Probability to force the crawler to hit a non-existing page
TCrawlerBaidu.crawler.miss.probability = 0

## Expected status code in case of page miss. This might be a common return code as well as a regular expression.
## Example: 200
## Example: 404
## Example: (200|404)
## Example: \\d{3}
## To deactivate status code checking, disable the property or clear its value.
#TCrawlerBaidu.crawler.miss.statusCode = 404

## Expected text contained on as page-miss page. The value is interpreted as regular expression
## Example: URL not found
## Example: Sorry.*?not found
## To deactivate status code checking, disable the property or clear its value.
#TCrawlerBaidu.crawler.miss.expectedTextRegEx = URL Not Found

## URL filter. Separate several URLs by space.
## Default: value of 'com.xceptance.xlt.http.filter.include'
#TCrawlerBaidu.crawler.includeURLs =
TCrawlerBaidu.crawler.excludeURLs = ^mailto: ^# \\.jpg$ \\.png$ \\.pdf$ \\.txt$ \\.xml$

## Max nurmber of pages to crawl. Stop crawling if that number is reached.
TCrawlerBaidu.crawler.maxPages = 100

## Time to run is taken from random value between MIN and MAX. Stop when crawler runtime is reached. Runtime limit
## must be 1 sec or higher.
## Number AND unit required, such as 10m, 30s, 1h OR combination like 3h2m1s.
## Ranges can be
##   (from-to)          10m - 1h
##   (lower limit only) 10m -
##   (upper limit only)     - 10m
## The dash is mandatory.
## If no lower limit is given, 0 is assumed.
## If no upper limit is given, Integer.MAX_VALUE is assumed.
#TCrawlerBaidu.crawler.runtime.range = 20s - 5m

## Max depth of recursion
## Default: 1 (don't crawl into depth at all)
#TCrawlerBaidu.crawler.maxDepth = 2

## Add some dynamic parameter to the URLs to crawl to disable server side caching
#TCrawlerBaidu.crawler.noCache = false

## Drop Session
## * always
## * never
## * every <INTERVAL><UNIT>
## Unit might by a time unit such as h,m,s (meaning hour, minute, and second)
## OR unit might be "p" for pages
##
## Examples:
## TCrawlerBaidu.crawler.dropSession = always
## TCrawlerBaidu.crawler.dropSession = never
## TCrawlerBaidu.crawler.dropSession = every 1h30m
## TCrawlerBaidu.crawler.dropSession = every 3p
#TCrawlerBaidu.crawler.dropSession = never

## Text Filters
## Add as many text filters as needed. Take care the text filter ID
## is unique for the current filter. The ID doesn't need to be a number
## necessarily.
## Default: no filters

## Disallowed texts
#TCrawlerBaidu.crawler.disallowText.1 =
#TCrawlerBaidu.crawler.disallowText.2 =
#TCrawlerBaidu.crawler.disallowText.3 =

## Required texts
#TCrawlerBaidu.crawler.requireText.1 =
#TCrawlerBaidu.crawler.requireText.2 =
#TCrawlerBaidu.crawler.requireText.3 =