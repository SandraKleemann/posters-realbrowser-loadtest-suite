################################################################################
#
# Project-Specific Report Generator Settings
#
# In order to reduce the list of requests in the report, the values of different
# requests can be merged together. You may specify one or more merge rules as
# outlined below:
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.<num>.<param> = <value>
#
# The rules are sorted numerically based on <num> and are applied in ascending
# order.
#
# The supported values for "<param>" are:
#
#   newName .................. new request name (required)
#
#   namePattern [n] .......... reg-ex defining a matching request name
#   transactionPattern [t] ... reg-ex defining a matching transaction name
#   agentPattern [a] ......... reg-ex defining a matching agent name
#   contentTypePattern [c] ... reg-ex defining a matching response content type
#   statusCodePattern [s] .... reg-ex defining a matching status code
#   urlPattern [u] ........... reg-ex defining a matching request URL
#   runTimeRanges [r] ........ list of run time segment boundaries
#
#   stopOnMatch .............. whether or not to process the next rule even if
#                              the current rule applied (defaults to true)
#
# At least one of namePattern, transactionPattern, agentPattern,
# contentTypePattern, statusCodePattern, urlPattern or runTimeRanges must be
# specified. If more than one pattern is given, all given patterns must
# match.
#
# Note that newName may contain placeholders, which are replaced with the
# specified capturing group from the respective pattern. The placeholder
# format is as follows: {<category>:<capturingGroupIndex>}, where <category> is
# the type code of the respective pattern (given in brackets above) and
# <capturingGroupIndex> denotes the respective capturing group in the selected
# pattern (does not apply to runTimeRanges).
#
# Excluding instead of Including
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.<num>.<param>.exclude = <value>
#
# All requests that match the exclude pattern will not be selected. For example,
# to create a bucket for all non-JavaScript resources, you would setup a rule like that.
#
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.newName = {n:0} NonJS
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.namePattern = .+
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.contentTypePattern.exclude = javascript
#   com.xceptance.xlt.reportgenerator.requestMergeRules.1.stopOnMatch = false
#
# Please note that an include pattern as well as an exclude pattern can be specified for
# a pattern type at the same time. In this case, a request is selected if and only if it
# matches the include pattern, but does not match the exclude pattern.
#
################################################################################

# Let XLT handle the removal of the . in the names
com.xceptance.xlt.reportgenerator.requests.removeIndexes = true

##
## It might be required to adjust these rules to your needs because often incorrect or rarely used 
## content types might be used or the url has a strange format so that these rules here don't match.
##

## Response Code to split up identical urls into their two types
com.xceptance.xlt.reportgenerator.requestMergeRules.5.newName = {n} [{s}]
com.xceptance.xlt.reportgenerator.requestMergeRules.5.stopOnMatch = false

## Images
# Use the Content Type
com.xceptance.xlt.reportgenerator.requestMergeRules.10.newName = {n} <Images>
com.xceptance.xlt.reportgenerator.requestMergeRules.10.contentTypePattern = image/
com.xceptance.xlt.reportgenerator.requestMergeRules.10.stopOnMatch = true

#
com.xceptance.xlt.reportgenerator.requestMergeRules.11.newName = {n} <Images>
com.xceptance.xlt.reportgenerator.requestMergeRules.11.urlPattern = (?i)^[^\\?]+\\.(gif|png|jpg|jpeg|ico|svg)\\??
com.xceptance.xlt.reportgenerator.requestMergeRules.11.stopOnMatch = true

## JS
# Use the Content Type
com.xceptance.xlt.reportgenerator.requestMergeRules.20.newName = {n} <JS>
com.xceptance.xlt.reportgenerator.requestMergeRules.20.contentTypePattern = javascript
com.xceptance.xlt.reportgenerator.requestMergeRules.20.stopOnMatch = true

com.xceptance.xlt.reportgenerator.requestMergeRules.21.newName = {n} <JS>
com.xceptance.xlt.reportgenerator.requestMergeRules.21.urlPattern = \\.js(\\?.*)?$
com.xceptance.xlt.reportgenerator.requestMergeRules.21.stopOnMatch = true


## CSS
# Use the Content Type
com.xceptance.xlt.reportgenerator.requestMergeRules.30.newName = {n} <CSS>
com.xceptance.xlt.reportgenerator.requestMergeRules.30.contentTypePattern = css
com.xceptance.xlt.reportgenerator.requestMergeRules.30.stopOnMatch = true

com.xceptance.xlt.reportgenerator.requestMergeRules.31.newName = {n} <CSS>
com.xceptance.xlt.reportgenerator.requestMergeRules.31.urlPattern = \\.css\\??
com.xceptance.xlt.reportgenerator.requestMergeRules.31.stopOnMatch = true

## Fonts
# Use the Content Type
com.xceptance.xlt.reportgenerator.requestMergeRules.40.newName = {n} <Fonts>
com.xceptance.xlt.reportgenerator.requestMergeRules.40.contentTypePattern = font
com.xceptance.xlt.reportgenerator.requestMergeRules.40.stopOnMatch = true

com.xceptance.xlt.reportgenerator.requestMergeRules.41.newName = {n} <Fonts>
com.xceptance.xlt.reportgenerator.requestMergeRules.41.urlPattern = \\.(woff|woff2|ttf)\\??
com.xceptance.xlt.reportgenerator.requestMergeRules.41.stopOnMatch = true

##
## Separate servers
##
## Separate all HOST NAMES
#com.xceptance.xlt.reportgenerator.requestMergeRules.700.newName = {n} <{u:1}>
#com.xceptance.xlt.reportgenerator.requestMergeRules.700.urlPattern = ^http[s]?://([^/?]+)
#com.xceptance.xlt.reportgenerator.requestMergeRules.700.stopOnMatch = false
